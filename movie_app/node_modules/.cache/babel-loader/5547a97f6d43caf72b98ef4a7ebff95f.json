{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IGO\\\\Desktop\\\\reactStudy\\\\movie_app\\\\src\\\\App.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n/* import PropTypes from \"prop-types\";\n\nconst foodILike = [\n  {\n    id: 1,\n    name: \"kimchi\",\n    image: \"a\",\n    rating: 5\n  },\n  {\n    id: 2,\n    name: \"ramen\",\n    image: \"b\",\n    rating: 4.9\n  },\n  {\n    id: 3,\n    name: \"samgiopsal\",\n    image: \"c\",\n    rating: 5.5\n  },\n  {\n    id: 4,\n    name: \"chukumi\",\n    image: \"d\",\n    rating: 4.7\n  }\n];\n\nfunction Food({ name, picture, rating }) {\n  return <div>\n    <h2>I like {name}</h2>\n    <h4>{rating}/5.0</h4>\n    <img src={picture} alt={name}/>\n  </div>\n}\n\nFood.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n}\n\nfunction renderFood(dish) {\n  return <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n}\n\nfunction App() {\n  return (\n    <div>{foodILike.map(renderFood)}</div>\n  );\n} */\n\n/* class App extends React.Component {\n    state = {\n        count: 0\n    };\n    add = () => {\n        this.setState(current => ({ count: current.count + 1 }));\n    };\n    minus = () => {\n        this.setState(current => ({ count: current.count - 1 }));\n    }\n    render() {\n        return (\n            <div>\n                <h1>The number is: {this.state.count}</h1>\n                <button onClick={this.add}>Add</button>\n                <button onClick={this.minus}>minus</button>\n            </div>\n        );\n    }\n} */\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const _ref = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"),\n            movies = _ref.data.data.movies;\n\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    /* setTimeout(() => {\n        this.setState({isLoading : false})\n    }, 3000) */\n    this.getMovies();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          movies = _this$state.movies;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, isLoading ? \"Loading...\" : movies.map(movie => React.createElement(Movie, {\n      id: movie.id,\n      year: movie.year,\n      title: movie.title,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/IGO/Desktop/reactStudy/movie_app/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","get","data","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAG,IADN;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAKhCC,SALgC,GAKpB,YAAY;AAAA,mBACc,MAAMP,KAAK,CAACQ,GAAN,CAAU,0DAAV,CADpB;AAAA,YACEF,MADF,QACfG,IADe,CACNA,IADM,CACEH,MADF;;AAEtB,WAAKI,QAAL,CAAc;AAACJ,QAAAA,MAAD;AAASD,QAAAA,SAAS,EAAE;AAApB,OAAd;AACD,KAR+B;AAAA;;AAShCM,EAAAA,iBAAiB,GAAE;AACjB;;;AAGA,SAAKJ,SAAL;AACD;;AACDK,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKR,KAD5B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,MADZ,eACYA,MADZ;AAEP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,SAAS,GAAG,YAAH,GAAkBC,MAAM,CAACO,GAAP,CAAWC,KAAK,IAC5C,oBAAC,KAAD;AACA,MAAA,EAAE,EAAEA,KAAK,CAACC,EADV;AAEA,MAAA,IAAI,EAAED,KAAK,CAACE,IAFZ;AAGA,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHb;AAIA,MAAA,OAAO,EAAEH,KAAK,CAACI,OAJf;AAKA,MAAA,MAAM,EAAEJ,KAAK,CAACK,kBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD4B,CAAjC,CAAP;AASD;;AA1B+B;;AA6BlC,eAAejB,GAAf","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n/* import PropTypes from \"prop-types\";\n\nconst foodILike = [\n  {\n    id: 1,\n    name: \"kimchi\",\n    image: \"a\",\n    rating: 5\n  },\n  {\n    id: 2,\n    name: \"ramen\",\n    image: \"b\",\n    rating: 4.9\n  },\n  {\n    id: 3,\n    name: \"samgiopsal\",\n    image: \"c\",\n    rating: 5.5\n  },\n  {\n    id: 4,\n    name: \"chukumi\",\n    image: \"d\",\n    rating: 4.7\n  }\n];\n\nfunction Food({ name, picture, rating }) {\n  return <div>\n    <h2>I like {name}</h2>\n    <h4>{rating}/5.0</h4>\n    <img src={picture} alt={name}/>\n  </div>\n}\n\nFood.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n}\n\nfunction renderFood(dish) {\n  return <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n}\n\nfunction App() {\n  return (\n    <div>{foodILike.map(renderFood)}</div>\n  );\n} */\n\n/* class App extends React.Component {\n    state = {\n        count: 0\n    };\n    add = () => {\n        this.setState(current => ({ count: current.count + 1 }));\n    };\n    minus = () => {\n        this.setState(current => ({ count: current.count - 1 }));\n    }\n    render() {\n        return (\n            <div>\n                <h1>The number is: {this.state.count}</h1>\n                <button onClick={this.add}>Add</button>\n                <button onClick={this.minus}>minus</button>\n            </div>\n        );\n    }\n} */\n\nclass App extends React.Component {\n  state = {\n    isLoading : true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {data : { data : {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading: false})\n  }\n  componentDidMount(){\n    /* setTimeout(() => {\n        this.setState({isLoading : false})\n    }, 3000) */\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return <div>{isLoading ? \"Loading...\" : movies.map(movie => (\n                <Movie \n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n               />\n    ))}</div>;\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}